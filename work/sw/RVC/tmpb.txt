                 buser/dinx                                                                                                                      progress  (RAM)      Int_info_ mpie shi                                                                
     minx        ||qint/ill         p r l                                                                                             Cy         |enaQ       ACK      S T E t r |mie ft Micro                                                           
start|| ucode    ||||may            c v u                                                                                             |          ||WE       STB| SEL  epepepepep\\csr|| code                                                            
  cy||| |||||||| |||||take I[31:0]  1 c h pc[31:0] rai  wai  in[31:0] Dsram___ rDee____ DAT_O___ Di[31:0] ADR_O___   M[31:0]_ ALUOP__ | B[31:0]_ |||      ||| || 3210 |||||||||| ||| || label__ Microcode_instruction_text_______________Assembler_instr
0000-00 80002020 000000 00 00000000 0 0 0 ffff0000 0080      00000000 abbababa 00000000 00000000 00000000 00000000 h 00000000 passQ   0 00000003 1... ... ... .. 0000 0000000000 000 00 LB_0    LB     Load byte. q = rdadr=RS1+0fs      
0001 01 80036b20 000100 00 00000000 0 0 0 ffff0000 0000      00000000 abbababa 00000000 00000000 00000000 00000000 u 00000000 ADD     0 00000000 11.. ... ... .. 1111 0000000000 000 18 LB_1           Read until q=mem[rs1+ofs) & ~3u]  
0002 d2 8a02fb09 000100 00 00000000 0 0 0 ffff0000 00a8      00000000 abbababa abbababa 00000000 00000000 00000000 u 00000001 passD   0 00000000 11.. ... ... .. 1111 0000000000 000 00 LB_2           Repeat shr until shreg == 0 (0,8,1
0003 06 84029b09 000100 00 00000000 0 0 0 ffff0000 00a8      00000000 abbababa abbababa 00000000 00000000 00000000 h 00000001 passD   0 00000000 1... ... ... .. 1111 0000000000 000 00 LB_3           q = ~mem[rs1+ofs]                 
0004 07 8001bb10 000100 00 00000000 0 0 0 ffff0000 0098      00000000 abbababa abbababa 00000000 00000000 00000000 u 00000001 INVQ    0 ffffffff 11.. ... ... .. 1111 0000000000 000 1f LB_4           q = (uint8_t) mem[rs1+Iimm]       
0005 09 80017b18 000100 00 00000000 0 0 0 ffff0000 0094      00000000 abbababa abbababa 000000ff 000000ff ffffffff u 00000001 nearAND 0 00000000 11.. ... ... .. 1111 0000000000 000 1f LB_5           q = D^0xffffffff^q = D^0x80       
0006 a3 80017b00 000100 00 00000000 0 0 0 ffff0000 0094      00000000 abbababa abbababa ffffff7f ffffff7f 00000000 u 00000001 nearXOR 0 00000080 11.. ... ... .. 1111 0000000000 000 1f LB_6           WTRG=(D^0x80)+0xFFFFFF7F+1=(D^0x80
0007 e6 0010ba26 000110 00 00000000 0 0 0 ffff0000 0088 0080 00000000 abbababa abbababa ffffff7f ffffff7f 00000080 z 00000001 ADD     0 00000000 11.. ... ... .. 1111 0000000000 000 1f StdIncPc Fr00  IncPC, OpFetch                    
0008 df 022b7126 000111 00 00000000 0 0 0 ffff0000 0004 0088 00000000 abbababa 00000001 ffff0000 ffff0000 00000000 u 00000001 ADD     0 ffff0004 11.. ... ... .. 1111 0000000000 000 1f eFetch   Fr00  rep Read until d=mem[(rs1+ofs) & ~
0009 f4 ca02fa88 000100 00 00000000 0 0 0 ffff0004 00ac      00000000 abbababa 00000001 00000000 00000000 ffff0004 h 00000001 passD   0 00000000 .... ... ... 1. 1111 0000000000 000 1f Fetch2   Fr00  Upd ttime, I. Q=imm Use dinx unles
000a f4 ca02fa88 000100 04 00010412 0 0 0 ffff0004 00ac      00000000 18490e71 abbababa ffffffff ffffffff ffff0004 h 00000001 passD   0 ffffffff .... ... ... 11 1111 0000000000 000 1f Fetch2   Fr00  Upd ttime, I. Q=imm Use dinx unles
000b f4 ca02fa88 000100 ff ffffffff 0 0 0 ffff0004 008c      00000000 abbababa 18490e71 ffffffff 18490e71 ffff0004 z 00000001 passD   0 18490e71 11.. ... ... .. 1111 0000000000 000 1f Fetch2   Fr00  Upd ttime, I. Q=imm Use dinx unles
000c 04 006fff20 010000 04 01ce0e13 0 1 0 ffff0004 0070 008c 00000000 abbababa abbababa 00000000 00000000 00000000 u 00000001 ADD     0 00000001 11.. ... ... .. 1111 0000000000 000 1f ADDI_0  ADDI   Add immediate. rd =RS1+Iimm (or joaddi     x28,x28,28
000d e6 0010ba20 000000 04 01ce0e13 0 1 0 ffff0004 0088 0070 00000000 abbababa abbababa 00000000 00000000 0000001c z 00000001 ADD     0 0000001c 11.. ... ... .. 1111 0000000000 000 1f StdIncPc Fr00  IncPC, OpFetch                    
000e df 022b7126 000011 04 01ce0e13 0 1 0 ffff0004 0004 0088 00000000 abbababa abbababa ffff0004 ffff0004 00000000 u 00000001 ADD     0 ffff0006 11.. ... ... .. 1111 0000000000 000 1f eFetch   Fr00  rep Read until d=mem[(rs1+ofs) & ~
000f f4 ca02fa88 000000 04 01ce0e13 1 1 0 ffff0006 00ac      00000000 abbababa 00000001 00000000 00000000 ffff0006 h 00000001 passD   0 00000000 .... ... ... 1. 1111 0000000000 000 1f Fetch2   Fr00  Upd ttime, I. Q=imm Use dinx unles
0010 f4 ca02fa88 000100 04 00010412 1 1 0 ffff0006 00ac      00000000 18490e71 abbababa ffffffff ffffffff ffff0006 h 00000001 passD   0 ffffffff .... ... ... 11 1111 0000000000 000 1f Fetch2   Fr00  Upd ttime, I. Q=imm Use dinx unles
0011 f4 ca02fa88 000100 ff 0001ffff 1 1 0 ffff0006 008c      00000000 abbababa 18490e71 ffffffff 18490e71 ffff0006 z 00000001 passD   0 18490e71 11.. ... ... .. 1111 0000000000 000 1f Fetch2   Fr00  Upd ttime, I. Q=imm Use dinx unles
0012 04 006fff20 010000 04 ff280813 1 1 0 ffff0006 0040 008c 00000000 abbababa abbababa 00000001 00000001 00000000 u 00000001 ADD     0 00000002 11.. ... ... .. 1111 0000000000 000 1f ADDI_0  ADDI   Add immediate. rd =RS1+Iimm (or joaddi     x16,x16,-14
0013 e6 0010ba20 000000 04 ff280813 1 1 0 ffff0006 0088 0040 00000000 abbababa abbababa 00000000 00000000 fffffff2 z 00000001 ADD     0 fffffff2 11.. ... ... .. 1111 0000000000 000 1f StdIncPc Fr00  IncPC, OpFetch                    
0014 df 022b7126 000011 04 ff280813 1 1 0 ffff0006 0008 0088 00000000 abbababa abbababa ffff0006 ffff0006 00000000 u 00000001 ADD     0 ffff0008 11.. ... ... .. 1111 0000000000 000 1f eFetch   Fr00  rep Read until d=mem[(rs1+ofs) & ~
0015 f4 ca02fa88 000000 04 ff280813 0 1 0 ffff0008 00ac      00000000 abbababa 00000001 00000000 00000000 ffff0008 h 00000001 passD   0 00000000 .... ... ... 1. 1111 0000000000 000 1f Fetch2   Fr00  Upd ttime, I. Q=imm Use dinx unles
0016 f4 ca02fa88 000100 04 00010412 0 1 0 ffff0008 00ac      00000000 410e00b3 abbababa ffffffff ffffffff ffff0008 h 00000001 passD   0 ffffffff .... ... ... 11 1111 0000000000 000 1f Fetch2   Fr00  Upd ttime, I. Q=imm Use dinx unles
0017 f4 ca02fa88 000100 ff ffffffff 0 1 0 ffff0008 008c      00000000 abbababa 410e00b3 ffffffff 410e00b3 ffff0008 z 00000001 passD   0 410e00b3 11.. ... ... .. 1111 0000000000 000 1f Fetch2   Fr00  Upd ttime, I. Q=imm Use dinx unles
0018 0e 006fff20 010000 0e 410e00b3 0 0 0 ffff0008 0070 008c 00000000 abbababa abbababa 00000002 00000002 00000000 u 00000001 ADD     0 00000003 11.. ... ... .. 1111 0000000000 000 1f SUB_0   SUB    Subtraction                       "sub"    x1,x28,x16
0019 10 8003b200 000000 0e 410e00b3 0 0 0 ffff0008 0040      00000000 abbababa abbababa 0000001c 0000001c 00000410 z 00000001 nearXOR 0 fffffbf0 11.. ... ... .. 1111 0000000000 000 1f SUB_1          Q = ~RS2                          
001a a3 8003fb00 000000 0e 410e00b3 0 0 0 ffff0008 0070      00000000 abbababa abbababa fffffff2 fffffff2 00000000 u 00000001 nearXOR 0 0000000d 11.. ... ... .. 1111 0000000000 000 1f LB_6           WTRG=(D^0x80)+0xFFFFFF7F+1=(D^0x80
001b e6 0010ba26 000010 0e 410e00b3 0 0 0 ffff0008 0088 0004 00000000 abbababa abbababa 0000001c 0000001c 0000000d z 00000001 ADD     0 0000002a 11.. ... ... .. 1111 0000000000 000 1f StdIncPc Fr00  IncPC, OpFetch                    
                 buser/dinx                                                                                                                      progress STB(IO)     Int_info_ mpie shi                                                                
     minx        ||qint/ill         p r l                                                                                             Cy         |enaQ    |sysack     S T E t r |mie ft Micro                                                           
     || ucode    ||||may            c v u                                                                                             |          ||WE     ||ACK  SEL  epepepepep\\csr|| code                                                            
  cy || |||||||| |||||take I[31:0]  1 c h pc[31:0] rai  wai  in[31:0] Dsram___ rDee____ DAT_O___ Di[31:0] ADR_O___   M[31:0]_ ALUOP__ | B[31:0]_ |||      ||| || 3210 |||||||||| ||| || label__ Microcode_instruction_text_______________Assembler_instr
001c df 022b7126 000011 0e 410e00b3 0 0 0 ffff0008 000c 0088 00000000 abbababa 00000001 ffff0008 ffff0008 00000000 u 00000001 ADD     0 ffff000c 11.. ... ... .. 1111 0000000000 000 1f eFetch   Fr00  rep Read until d=mem[(rs1+ofs) & ~
001d f4 ca02fa88 000000 0e 410e00b3 0 0 0 ffff000c 00ac      00000000 abbababa 00000001 00000000 00000000 ffff000c h 00000001 passD   0 00000000 .... ... ... 1. 1111 0000000000 000 1f Fetch2   Fr00  Upd ttime, I. Q=imm Use dinx unles
001e f4 ca02fa88 000100 04 00010412 0 0 0 ffff000c 00ac      00000000 02a00113 abbababa ffffffff ffffffff ffff000c h 00000001 passD   0 ffffffff .... ... ... 11 1111 0000000000 000 1f Fetch2   Fr00  Upd ttime, I. Q=imm Use dinx unles
001f f4 ca02fa88 000100 ff ffffffff 0 0 0 ffff000c 008c      00000000 abbababa 02a00113 ffffffff 02a00113 ffff000c z 00000001 passD   0 02a00113 11.. ... ... .. 1111 0000000000 000 1f Fetch2   Fr00  Upd ttime, I. Q=imm Use dinx unles
0020 04 006fff20 010000 04 02a00113 0 0 0 ffff000c 0000 008c 00000000 abbababa abbababa 00000003 00000003 00000000 u 00000001 ADD     0 00000004 11.. ... ... .. 1111 0000000000 000 1f ADDI_0  ADDI   Add immediate. rd =RS1+Iimm (or joaddi     x2,x0,42
0021 e6 0010ba20 000000 04 02a00113 0 0 0 ffff000c 0088 0008 00000000 abbababa abbababa 00000000 00000000 0000002a z 00000001 ADD     0 0000002a 11.. ... ... .. 1111 0000000000 000 1f StdIncPc Fr00  IncPC, OpFetch                    
0022 df 022b7126 000011 04 02a00113 0 0 0 ffff000c 0010 0088 00000000 abbababa abbababa ffff000c ffff000c 00000000 u 00000001 ADD     0 ffff0010 11.. ... ... .. 1111 0000000000 000 1f eFetch   Fr00  rep Read until d=mem[(rs1+ofs) & ~
0023 f4 ca02fa88 000000 04 02a00113 0 0 0 ffff0010 00ac      00000000 abbababa 00000001 00000000 00000000 ffff0010 h 00000001 passD   0 00000000 .... ... ... 1. 1111 0000000000 000 1f Fetch2   Fr00  Upd ttime, I. Q=imm Use dinx unles
0024 f4 ca02fa88 000100 04 00010412 0 0 0 ffff0010 00ac      00000000 00111463 abbababa ffffffff ffffffff ffff0010 h 00000001 passD   0 ffffffff .... ... ... 11 1111 0000000000 000 1f Fetch2   Fr00  Upd ttime, I. Q=imm Use dinx unles
0025 f4 ca02fa88 000100 ff ffffffff 0 0 0 ffff0010 008c      00000000 abbababa 00111463 ffffffff 00111463 ffff0010 z 00000001 passD   0 00111463 11.. ... ... .. 1111 0000000000 000 1f Fetch2   Fr00  Upd ttime, I. Q=imm Use dinx unles
0026 38 006fff20 010000 38 00111463 0 0 0 ffff0010 0008 008c 00000000 abbababa abbababa 00000004 00000004 00000000 u 00000001 ADD     0 00000005 11.. ... ... .. 1111 0000000000 000 1f BNE     BNE    Conditional Branch. Offset to Ryy bne      x2,x1,ffff0018
0027 13 0033ba30 000000 38 00111463 0 0 0 ffff0010 0004 00b0 00000000 abbababa abbababa 0000002a 0000002a 00000008 z 00000001 passQ   0 00000008 11.. ... ... .. 1111 0000000000 000 1f condb_2        ~RS2 in Q                         
0028 14 8003fb00 000000 38 00111463 0 0 0 ffff0010 0008      00000000 abbababa abbababa 0000002a 0000002a 00000000 u 00000001 nearXOR 0 ffffffd5 11.. ... ... .. 1111 0000000000 000 1f condb_3        Calculate RS1+~RS2+1              
0029 15 8000bb26 000000 38 00111463 0 0 0 ffff0010 0088      00000000 abbababa abbababa 0000002a 0000002a ffffffd5 u 00000001 ADD     0 00000000 11.. ... ... .. 1111 0000000000 000 1f condb_4        Branch on condition               
002a 16 80033b48 000010 38 00111463 0 0 0 ffff0010 00b0      00000000 abbababa abbababa ffff0010 ffff0010 00000000 u 00000001 passD   0 ffff0010 11.. ... ... .. 1111 0000000000 000 1f condb_5        Branch not taken.                 
002b df 022b7136 000011 38 00111463 0 0 0 ffff0010 0014 0088 00000000 abbababa abbababa 00000008 00000008 ffff0010 u 00000001 passQ   0 ffff0014 11.. ... ... .. 1111 0000000000 000 1f eFetch   Fr00  rep Read until d=mem[(rs1+ofs) & ~
002c f4 ca02fa88 000000 38 00111463 0 0 0 ffff0014 00ac      00000000 abbababa abbababa 00000000 00000000 ffff0014 h 00000001 passD   0 00000000 .... ... ... 1. 1111 0000000000 000 1f Fetch2   Fr00  Upd ttime, I. Q=imm Use dinx unles
002d f4 ca02fa88 000100 04 00010412 0 0 0 ffff0014 00ac      00000000 00003033 abbababa ffffffff ffffffff ffff0014 h 00000001 passD   0 ffffffff .... ... ... 11 1111 0000000000 000 1f Fetch2   Fr00  Upd ttime, I. Q=imm Use dinx unles
002e f4 ca02fa88 000100 ff ffffffff 0 0 0 ffff0014 008c      00000000 abbababa 00003033 ffffffff 00003033 ffff0014 z 00000001 passD   0 00003033 11.. ... ... .. 1111 0000000000 000 1f Fetch2   Fr00  Upd ttime, I. Q=imm Use dinx unles
../../obj_dir/sRVC/t101.bin              success     6 instructions in     47 cycles, cpi = -2.83 At 24 MHz, runtime = 0.000                s
